replicaCount: 1

image:
  repository: 182024812696.dkr.ecr.ap-northeast-2.amazonaws.com/payment-api

  ## IfNotPresent 일 경우, 이미지가 존재하지 않을 경우에만 이미지를 가져옴 (캐시는 좋으나, 문제가 있는 이미지를 계속 쓸 위험이 존재)
  # pullPolicy: IfNotPresent
  pullPolicy: Always
  tag: latest

## private registry 설정
imagePullSecrets: 
  - name: aws-ecr-secret

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels:
  service: payment-api
  version: 1.0.0
  env: dev
  author: leedonggyu

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  type: ClusterIP
  name: payment
  port: 3000
  targetPort: 3000

resources: 
  limits: ## 최대로 보장받는 resources
    cpu: 500m
    memory: 512Mi
  requests: ## 최소로 보장받는 resources
    cpu: 200m
    memory: 256Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /api/ping
    port: http
  initialDelaySeconds: 30
  periodSeconds: 30
readinessProbe:
  httpGet:
    path: /api/ping
    port: http
  initialDelaySeconds: 15
  periodSeconds: 5

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

## 특정 node에만 배포해야할때 사용하는 옵션 (여기에만 배포 해)
nodeSelector: {}

## (여기에도 배포 해도 돼) - 좀더 복잡한 조건에 활용
tolerations: []

affinity: {}
